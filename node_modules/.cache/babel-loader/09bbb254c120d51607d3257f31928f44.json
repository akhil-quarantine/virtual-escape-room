{"ast":null,"code":"var _jsxFileName = \"/Users/killawa/Documents/github/virtual-escape-room/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './components/Home';\nimport Navigation from './components/Navigation';\nimport Password from \"./components/password\";\nimport Story from \"./components/story\";\nimport Stageone from \"./components/stageone\";\nimport Polygraph from \"./components/polygraph\";\nimport Suspects from \"./components/suspects\";\nimport Starting from \"./components/starting\";\nimport Killer from \"./components/killer\";\nimport Motive from \"./components/motive\";\nimport How from \"./components/how\";\nimport Congrats from \"./components/congrats\";\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.enteredRoom = num => {\n      this.setState({\n        entered: true\n      });\n      this.handlevalueChange(\"hints\", \"hints\", num);\n    };\n\n    this.acceptChallenge = () => {\n      var temp_stages = this.state.stages.slice();\n      temp_stages[0] = true;\n      temp_stages[1] = true;\n      temp_stages[2] = true;\n      var new_home = Object.assign({}, this.state.home);\n      new_home.accepted = true;\n      this.setState({\n        stages: temp_stages,\n        home: new_home\n      });\n\n      if (!this.state.stages[0]) {\n        this.myInterval = setInterval(() => {\n          const {\n            seconds,\n            minutes\n          } = this.state;\n\n          if (seconds > 0) {\n            this.setState(({\n              seconds\n            }) => ({\n              seconds: seconds - 1\n            }));\n          }\n\n          if (seconds === 0) {\n            if (minutes === 0) {\n              clearInterval(this.myInterval);\n            } else {\n              this.setState(({\n                minutes\n              }) => ({\n                minutes: minutes - 1,\n                seconds: 59\n              }));\n            }\n          }\n        }, 1000);\n      }\n    };\n\n    this.setsuccess = arranum => {\n      var temp_stages = this.state.stages.slice();\n\n      for (var index = 0; index < arranum.length; index++) {\n        temp_stages[arranum[index]] = true;\n\n        if (arranum[index] === 9) {\n          clearInterval(this.myInterval);\n        }\n      }\n\n      this.setState({\n        stages: temp_stages\n      });\n    };\n\n    this.successfulmetric = succ => {\n      this.setState({\n        success: succ\n      });\n      clearInterval(this.myInterval);\n    };\n\n    this.validatekiller = name => {\n      if (name.toLowerCase().trim() === \"hasan\") {\n        this.setsuccess([6]);\n      } else {\n        this.setState({\n          success: false\n        });\n      }\n    };\n\n    this.handlevalueChange = (stage, attribute, value) => {\n      var temp_new = this.state[stage];\n      temp_new[attribute] = value;\n      var obj = {};\n      obj[stage] = temp_new;\n      this.setState(obj);\n    };\n\n    this.state = {\n      entered: false,\n      minutes: 45,\n      seconds: 0,\n      success: null,\n      stages: [false, false, false, false, false, false, false, false, false],\n      home: {\n        accepted: false\n      },\n      password: {\n        who: \"\",\n        why: \"\",\n        how: \"\",\n        name: \"\",\n        tries: 5,\n        solved: false\n      },\n      stageone: {\n        first: \"\",\n        second: \"\",\n        third: \"\",\n        fourth: \"\",\n        first_guess: \"\",\n        second_guess: \"\",\n        third_guess: \"\",\n        fourth_guess: \"\",\n        solved: false,\n        hints: 0\n      },\n      suspects: {\n        tries: 0,\n        correct: false,\n        first: \"\",\n        second: \"\",\n        hints: 0\n      },\n      emails: {\n        hints: 0\n      },\n      motive: {\n        correct: false,\n        guesses: [\"\", \"\", \"\", \"\", \"\"],\n        hints: 1\n      },\n      hints: {\n        hints: 4\n      },\n      how: {\n        hints: 0\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    if (!this.state.entered) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"introb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, \" Ready to Play? \"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.enteredRoom(0);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, \" Hardest \"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.enteredRoom(2);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, \" Hard \"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => this.enteredRoom(5),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, \" Medium \"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => this.enteredRoom(7),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, \" Easy \"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.enteredRoom(12);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, \" Easiest  \"));\n    } else if (this.state.minutes === 0 && this.state.seconds === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"row topmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"letter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, \" Sorry, you ran out of time! \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }, \" P.S You can easily start again by clicking on \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://akhil-quarantine.github.io/virtual-escape-room/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 79\n        }\n      }, \"this link\"), \".\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Navigation, {\n        active: this.state.stages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }))));\n    } else if (this.state.success === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"row topmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"letter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, \" Sorry, you ran out of guesses! \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }\n      }, \" P.S You can easily start again by clicking on \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://akhil-quarantine.github.io/virtual-escape-room/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 79\n        }\n      }, \"this link\"), \".\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"row topmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n          vals: this.state.home,\n          onclick: this.acceptChallenge,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 75\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/story\",\n        render: props => /*#__PURE__*/React.createElement(Story, Object.assign({}, props, {\n          active: this.state.stages[0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 77\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/starting\",\n        render: props => /*#__PURE__*/React.createElement(Starting, Object.assign({}, props, {\n          active: this.state.stages[1],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 80\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/todo\",\n        render: props => /*#__PURE__*/React.createElement(Stageone, Object.assign({}, props, {\n          active: this.state.stages[2],\n          solved: this.setsuccess,\n          vals: this.state.stageone,\n          change: this.handlevalueChange,\n          hints: this.state.hints.hints,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 76\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/suspects\",\n        render: props => /*#__PURE__*/React.createElement(Suspects, Object.assign({}, props, {\n          vals: this.state.suspects,\n          active: this.state.stages[3],\n          solved: this.setsuccess,\n          change: this.handlevalueChange,\n          hints: this.state.hints.hints,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 80\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/polygraph\",\n        render: props => /*#__PURE__*/React.createElement(Polygraph, Object.assign({}, props, {\n          active: this.state.stages[4],\n          solved: this.setsuccess,\n          vals: this.state.emails,\n          change: this.handlevalueChange,\n          hints: this.state.hints.hints,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 81\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/killer\",\n        render: props => /*#__PURE__*/React.createElement(Killer, Object.assign({}, props, {\n          active: this.state.stages[5],\n          validate: this.validatekiller,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 78\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/motive\",\n        render: props => /*#__PURE__*/React.createElement(Motive, Object.assign({}, props, {\n          active: this.state.stages[6],\n          solved: this.setsuccess,\n          vals: this.state.motive,\n          change: this.handlevalueChange,\n          hints: this.state.hints.hints,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 78\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/how\",\n        render: props => /*#__PURE__*/React.createElement(How, Object.assign({}, props, {\n          active: this.state.stages[7],\n          vals: this.state.how,\n          change: this.handlevalueChange,\n          hints: this.state.hints.hints,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 75\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/password\",\n        render: props => /*#__PURE__*/React.createElement(Password, Object.assign({}, props, {\n          vals: this.state.password,\n          succmet: this.successfulmetric,\n          solved: this.setsuccess,\n          change: this.handlevalueChange,\n          active: this.state.stages[8],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 80\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/congrats\",\n        render: props => /*#__PURE__*/React.createElement(Congrats, Object.assign({}, props, {\n          minutes: this.state.minutes,\n          seconds: this.state.seconds,\n          active: this.state.stages[9],\n          name: this.state.password.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 80\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 33\n        }\n      }, \" \", this.state.minutes, \" : \", this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds, \" \"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 33\n        }\n      }, \"  \", this.state.hints.hints, \" hints left \")), /*#__PURE__*/React.createElement(Navigation, {\n        active: this.state.stages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/killawa/Documents/github/virtual-escape-room/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Button","Home","Navigation","Password","Story","Stageone","Polygraph","Suspects","Starting","Killer","Motive","How","Congrats","String","prototype","trim","replace","App","constructor","props","enteredRoom","num","setState","entered","handlevalueChange","acceptChallenge","temp_stages","state","stages","slice","new_home","Object","assign","home","accepted","myInterval","setInterval","seconds","minutes","clearInterval","setsuccess","arranum","index","length","successfulmetric","succ","success","validatekiller","name","toLowerCase","stage","attribute","value","temp_new","obj","password","who","why","how","tries","solved","stageone","first","second","third","fourth","first_guess","second_guess","third_guess","fourth_guess","hints","suspects","correct","emails","motive","guesses","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './components/Home';\nimport Navigation from './components/Navigation';\nimport Password from \"./components/password\";\nimport Story from \"./components/story\";\nimport Stageone from \"./components/stageone\";\nimport Polygraph from \"./components/polygraph\";\nimport Suspects from \"./components/suspects\";\nimport Starting from \"./components/starting\";\nimport Killer from \"./components/killer\";\nimport Motive from \"./components/motive\";\nimport How from \"./components/how\";\nimport Congrats from \"./components/congrats\";\n\nif (!String.prototype.trim) {\n    String.prototype.trim = function () {\n      return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n    };\n  }\n\nclass App extends Component {\n    constructor(props) { \n        super(props) \n        this.state = { \n            entered: false, \n            minutes: 45, \n            seconds: 0,\n            success: null,\n            stages: [false, false, false, false, false, false, false, false, false], \n            home: {\n                accepted: false\n            },\n            password: { \n                who: \"\",\n                why: \"\",\n                how: \"\",\n                name: \"\",\n                tries: 5,\n                solved: false\n            }, \n            stageone: { \n                first: \"\", \n                second: \"\", \n                third: \"\",\n                fourth: \"\",\n                first_guess: \"\",\n                second_guess: \"\",\n                third_guess: \"\",\n                fourth_guess: \"\", \n                solved: false,\n                hints: 0\n            }, \n            suspects: {\n                tries: 0,\n                correct: false,\n                first: \"\",\n                second: \"\",\n                hints: 0\n            },\n            emails: { \n                hints: 0\n            },\n            motive: { \n                correct: false,\n                guesses: [\"\", \"\", \"\", \"\", \"\"],\n                hints: 1\n            }, \n            hints: { \n                hints: 4, \n            }, \n            how: { \n                hints: 0\n            }\n            \n        }\n    }\n    enteredRoom = (num) => {\n        this.setState({ \n            entered: true\n        })\n        this.handlevalueChange(\"hints\", \"hints\", num);\n    }\n    acceptChallenge = () => {\n        var temp_stages = this.state.stages.slice(); \n        temp_stages[0] = true;\n        temp_stages[1] = true;\n        temp_stages[2] = true;\n        var new_home = Object.assign({}, this.state.home);\n        new_home.accepted = true;\n        this.setState({\n            stages: temp_stages,\n            home: new_home    \n        })\n        if (!this.state.stages[0]) { \n            this.myInterval = setInterval(() => {\n                const { seconds, minutes } = this.state\n\n                if (seconds > 0) {\n                    this.setState(({ seconds }) => ({\n                        seconds: seconds - 1\n                    }))\n                }\n                if (seconds === 0) {\n                    if (minutes === 0) {\n                        clearInterval(this.myInterval)\n                    } else {\n                        this.setState(({ minutes }) => ({\n                            minutes: minutes - 1,\n                            seconds: 59\n                        }))\n                    }\n                } \n            }, 1000)\n        }\n    }\n\n    setsuccess = (arranum) => { \n        var temp_stages = this.state.stages.slice(); \n        for (var index = 0; index < arranum.length; index ++ ) {\n            temp_stages[arranum[index]] = true;\n            if (arranum[index] === 9) { \n                clearInterval(this.myInterval);\n            }\n        }\n        this.setState({ \n            stages: temp_stages\n        })\n    }\n    successfulmetric = (succ) => {\n        this.setState({\n            success: succ\n        })\n        clearInterval(this.myInterval);\n    }\n    validatekiller = (name) => { \n        if (name.toLowerCase().trim() === \"hasan\") { \n            this.setsuccess([6]);\n        } else {\n            this.setState({\n                success: false\n            })\n        }\n    }\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n    handlevalueChange = (stage, attribute, value) => { \n        var temp_new = this.state[stage];\n        temp_new[attribute] = value;\n        var obj = {};\n        obj[stage] = temp_new\n        this.setState(obj);\n    }\n\n\n    render() {\n        if (!this.state.entered) { \n            return ( \n                <div className = \"introb\"> \n                    <h1> Ready to Play? </h1>\n                    <Button  variant = \"primary\" onClick = {() => {this.enteredRoom(0)}} > Hardest </Button>\n                    <Button  variant = \"primary\" onClick = {() => {this.enteredRoom(2)}} > Hard </Button>\n                    <Button  variant = \"primary\" onClick = {() => this.enteredRoom(5)} > Medium </Button>\n                    <Button  variant = \"primary\" onClick = {() => this.enteredRoom(7)} > Easy </Button>\n                    <Button  variant = \"primary\" onClick = {() => {this.enteredRoom(12)}} > Easiest  </Button>\n                </div>\n                \n        )\n        }  else if (this.state.minutes === 0 && this.state.seconds === 0) { \n            return (\n                <div class = \"container\"> \n                    <div class = \"row topmargin\">\n                        <div class = \"letter\"> \n                            <h3> Sorry, you ran out of time! </h3>\n                            \n                            <p> P.S You can easily start again by clicking on <a href={\"https://akhil-quarantine.github.io/virtual-escape-room/\"}>this link</a>.</p>\n                        </div>\n                        <div> \n                            <Navigation active = {this.state.stages}/>\n                        </div>\n                    </div> \n                </div> \n            )   \n        } else if (this.state.success === false) { \n            return (\n                <div class = \"container\"> \n                    <div class = \"row topmargin\"> \n                        <div class = \"letter\"> \n                            <h3> Sorry, you ran out of guesses! </h3>\n                            \n                            <p> P.S You can easily start again by clicking on <a href={\"https://akhil-quarantine.github.io/virtual-escape-room/\"}>this link</a>.</p>\n                        </div>\n                    </div> \n                </div>\n            )   \n        }else {\n            return (\n                <div class = \"container\">\n                    <div class = \"row topmargin\"> \n                        <BrowserRouter>\n                        <div class = \"col-md-9\"> \n                            <Switch>\n                                <Route path=\"/\" exact render ={(props) => <Home {...props} vals = {this.state.home} onclick = {this.acceptChallenge}/>}/> \n                                <Route path = \"/story\" render = {(props) => <Story {...props} active = {this.state.stages[0]} />}/>\n                                <Route path = \"/starting\" render = {(props) => <Starting {...props} active = {this.state.stages[1]}/>}/> \n                                <Route path = \"/todo\" render = {(props) => <Stageone {...props} active = {this.state.stages[2]} solved = {this.setsuccess} vals = {this.state.stageone} change = {this.handlevalueChange} hints = {this.state.hints.hints}/>}/>\n                                <Route path = \"/suspects\" render = {(props) => <Suspects {...props} vals = {this.state.suspects} active = {this.state.stages[3]} solved = {this.setsuccess} change = {this.handlevalueChange} hints = {this.state.hints.hints}/>}/> \n                                <Route path = \"/polygraph\" render = {(props) => <Polygraph {...props} active = {this.state.stages[4]} solved = {this.setsuccess} vals = {this.state.emails} change = {this.handlevalueChange} hints = {this.state.hints.hints} />}/>\n                                <Route path = \"/killer\" render = {(props) => <Killer {...props} active = {this.state.stages[5]} validate = {this.validatekiller}/>} />\n                                <Route path = \"/motive\" render = {(props) => <Motive {...props} active = {this.state.stages[6]} solved = {this.setsuccess} vals = {this.state.motive} change = {this.handlevalueChange} hints ={this.state.hints.hints} />}/>\n                                <Route path = \"/how\" render = {(props) => <How {...props} active = {this.state.stages[7]} vals = {this.state.how} change = {this.handlevalueChange} hints = {this.state.hints.hints} />} />\n                                <Route path = \"/password\" render = {(props) => <Password {...props} vals = {this.state.password} succmet = {this.successfulmetric} solved = {this.setsuccess} change = {this.handlevalueChange} active = {this.state.stages[8]}/>}/>     \n                                <Route path = \"/congrats\" render = {(props) => <Congrats {...props} minutes = {this.state.minutes} seconds = {this.state.seconds} active = {this.state.stages[9]} name = {this.state.password.name} />}/>     \n                            </Switch>\n                        </div> \n                        <div class = \"col-md-3\">\n                            <div class = \"timer\"> \n                                <h1> {this.state.minutes} : {this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds} </h1> \n                                <h3>  {this.state.hints.hints} hints left </h3> \n                            </div>\n                            <Navigation active = {this.state.stages}/>\n                        </div>\n                        </BrowserRouter>\n                    </div> \n                 \n                </div>\n              );\n        }\n    }\n}\n\n\n\n\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}