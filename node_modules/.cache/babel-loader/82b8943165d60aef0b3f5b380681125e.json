{"ast":null,"code":"var _jsxFileName = \"/Users/killawa/Documents/github/virtual-escape-room/src/components/polygraph.js\";\nimport React, { Component } from 'react';\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport emails from \"./data/emails.json\";\nimport \"./css/polygraph.css\";\nimport Hint from \"./hints\";\n\nclass Polygraph extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderWeb = previous => {\n      var email = Object.assign({}, previous);\n      const closing = email.closer.map(elem => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 50\n        }\n      }, \" \", elem, \" \"));\n      const paras = email.paragraphs.map(para => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 52\n        }\n      }, \" \", para, \" \"));\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        className: \"emailhead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        className: \"emailtitle\",\n        variant: \"link\",\n        eventKey: email.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      }, \" SUBJECT: \", email.title)), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: email.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }\n      }, \" From: \", email.from, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, \" To: \", email.to, \" \"), paras, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"closing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      }, closing)))));\n    };\n  }\n\n  render() {\n    const email_web = emails.map(email => this.renderWeb(email));\n\n    if (this.props.active) {\n      const hinters = [{\n        num: \"0\",\n        title: \"Hint 1\",\n        body: \"Check for inconstencies! \"\n      }, {\n        num: \"1\",\n        title: \"Final Hint 2\",\n        body: \"Check for inconstencies in the alibi against emails! \"\n      }].slice(0, this.props.vals.hints);\n      const hints = /*#__PURE__*/React.createElement(Hint, {\n        values: hinters,\n        num: this.props.hints,\n        click: () => {\n          this.props.change(\"emails\", \"hints\", this.props.vals.hints + 1);\n          this.props.change(\"hints\", \"hints\", this.props.hints - 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 27\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"largest\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"inbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        defaultActiveKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          backgroundColor: \"white\",\n          borderStyle: \"solid\",\n          borderColor: \"black\",\n          borderWidth: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          color: \"rgb(85, 7, 7)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, \" Andrew's Inbox \"))), email_web)), hints);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"reject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \" You must first pass the earlier stages! \"));\n    }\n  }\n\n}\n\nexport default Polygraph;","map":{"version":3,"sources":["/Users/killawa/Documents/github/virtual-escape-room/src/components/polygraph.js"],"names":["React","Component","Accordion","Card","Button","emails","Hint","Polygraph","renderWeb","previous","email","Object","assign","closing","closer","map","elem","paras","paragraphs","para","number","title","from","to","render","email_web","props","active","hinters","num","body","slice","vals","hints","change","backgroundColor","borderStyle","borderColor","borderWidth","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAsC,iBAAtC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,qBAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9BO,SAF8B,GAEjBC,QAAD,IAAc;AACtB,UAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,QAAlB,CAAZ;AACA,YAAMI,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAiBC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKA,IAAL,MAAzB,CAAhB;AACA,YAAMC,KAAK,GAAGP,KAAK,CAACQ,UAAN,CAAiBH,GAAjB,CAAqBI,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKA,IAAL,MAA7B,CAAd;AACA,0BACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAG,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,EAAE,EAAEf,MAAtB;AAA8B,QAAA,SAAS,EAAG,YAA1C;AAAuD,QAAA,OAAO,EAAC,MAA/D;AAAsE,QAAA,QAAQ,EAAGM,KAAK,CAACU,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0GV,KAAK,CAACW,KAAhH,CADJ,CADJ,eAII,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,QAAQ,EAAEX,KAAK,CAACU,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYV,KAAK,CAACY,IAAlB,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAUZ,KAAK,CAACa,EAAhB,MAFJ,EAIKN,KAJL,eAMI;AAAK,QAAA,KAAK,EAAG,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,OADL,CANJ,CADJ,CADJ,CAJJ,CADJ;AAqBH,KA3B6B;AAAA;;AA4B9BW,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAGpB,MAAM,CAACU,GAAP,CAAWL,KAAK,IAAI,KAAKF,SAAL,CAAeE,KAAf,CAApB,CAAlB;;AACA,QAAI,KAAKgB,KAAL,CAAWC,MAAf,EAAuB;AACnB,YAAMC,OAAO,GAAG,CACZ;AACIC,QAAAA,GAAG,EAAE,GADT;AAEIR,QAAAA,KAAK,EAAE,QAFX;AAGIS,QAAAA,IAAI,EAAE;AAHV,OADY,EAKZ;AACID,QAAAA,GAAG,EAAE,GADT;AAEIR,QAAAA,KAAK,EAAE,cAFX;AAGIS,QAAAA,IAAI,EAAE;AAHV,OALY,EAUdC,KAVc,CAUR,CAVQ,EAUL,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,KAVX,CAAhB;AAWA,YAAMA,KAAK,gBAAG,oBAAC,IAAD;AACV,QAAA,MAAM,EAAIL,OADA;AAEV,QAAA,GAAG,EAAI,KAAKF,KAAL,CAAWO,KAFR;AAGV,QAAA,KAAK,EAAI,MAAM;AAAC,eAAKP,KAAL,CAAWQ,MAAX,CAAkB,QAAlB,EAA4B,OAA5B,EAAqC,KAAKR,KAAL,CAAWM,IAAX,CAAgBC,KAAhB,GAAwB,CAA7D;AAAiE,eAAKP,KAAL,CAAWQ,MAAX,CAAkB,OAAlB,EAA2B,OAA3B,EAAoC,KAAKR,KAAL,CAAWO,KAAX,GAAmB,CAAvD;AAA0D,SAHjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAKA,0BACI;AAAK,QAAA,KAAK,EAAG,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACJ,oBAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAI;AAACE,UAAAA,eAAe,EAAE,OAAlB;AAA2BC,UAAAA,WAAW,EAAE,OAAxC;AAAiDC,UAAAA,WAAW,EAAE,OAA9D;AAAuEC,UAAAA,WAAW,EAAE;AAApF,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,KAAK,EAAI;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CADJ,EAMKd,SANL,CADI,CADJ,EAWKQ,KAXL,CADJ;AAeH,KAhCD,MAgCO;AACH,0BACI;AAAK,QAAA,KAAK,EAAG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADR,CADJ;AAKH;AAGJ;;AAvE6B;;AA0ElC,eAAe1B,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Accordion, Card, Button} from 'react-bootstrap';\nimport emails from \"./data/emails.json\";\nimport \"./css/polygraph.css\";\nimport Hint from \"./hints\";\n\nclass Polygraph extends Component { \n    \n    renderWeb = (previous) => { \n        var email = Object.assign({}, previous);\n        const closing = email.closer.map(elem => <p> {elem} </p> );\n        const paras = email.paragraphs.map(para => <p> {para} </p>);\n        return (\n            <Card>\n                <Card.Header className = \"emailhead\" >\n                    <Accordion.Toggle as={Button} className = \"emailtitle\" variant=\"link\" eventKey= {email.number}> SUBJECT: {email.title}</Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={email.number}>\n                    <Card.Body> \n                        <div class = \"email\">\n                            <h5> From: {email.from} </h5> \n                            <h5> To: {email.to} </h5>\n\n                            {paras}\n\n                            <div class = \"closing\">\n                                {closing}\n                            </div>\n                        </div>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        )\n    }\n    render() {\n        const email_web = emails.map(email => this.renderWeb(email));\n        if (this.props.active) {\n            const hinters = [\n                {\n                    num: \"0\", \n                    title: \"Hint 1\", \n                    body: \"Check for inconstencies! \"}, \n                {\n                    num: \"1\", \n                    title: \"Final Hint 2\", \n                    body: \"Check for inconstencies in the alibi against emails! \"}, \n                \n            ].slice(0, this.props.vals.hints)\n            const hints = <Hint\n                values = {hinters}\n                num = {this.props.hints}\n                click = {() => {this.props.change(\"emails\", \"hints\", this.props.vals.hints + 1); this.props.change(\"hints\", \"hints\", this.props.hints - 1)}}\n            />  \n            return ( \n                <div class = \"largest\">\n                    <div class = \"inbox\"> \n                <Accordion defaultActiveKey=\"1\">\n                    <Card> \n                        <Card.Header style = {{backgroundColor: \"white\", borderStyle: \"solid\", borderColor: \"black\", borderWidth: \"3px\"}}>\n                            <h2 style = {{color: \"rgb(85, 7, 7)\"}}> Andrew's Inbox </h2> \n                        </Card.Header>\n                    </Card> \n                    {email_web}\n                </Accordion>\n                </div> \n                    {hints}\n                </div>\n            )\n        } else { \n            return ( \n                <div class = \"reject\"> \n                        <h3> You must first pass the earlier stages! </h3>\n                </div> \n            )\n        }\n\n        \n    }\n\n}\nexport default Polygraph;\n\n"]},"metadata":{},"sourceType":"module"}